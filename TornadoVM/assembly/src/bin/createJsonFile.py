#!/usr/bin/env python

# This file is part of Tornado: A heterogeneous programming framework: 
# https://github.com/beehive-lab/tornadovm
#
# Copyright (c) 2019-2020, APT Group, Department of Computer Science,
# The University of Manchester. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

"""
Script to create a Json file from the output generated by TornadoVM when the profiler
is enabled. 

Usage: ./createJsonFile.py <inputFile.json> <outpuFile.json>
"""

import json
import sys

## Add here content to the blacklist as needed
def ignore(line):
    if line.startswith("Size"):
        return True
    if line.startswith("Median"):
        return True
    return False

def createOneJsonFile(inputFileName, outputFileName="output.json"):
    f = open(inputFileName, "r")
    lines = f.readlines()
    entryIndex = 0
    jsonContent = {}
    jsonEntry = ""
    for line in lines:
        if (line.startswith("{")):
            jsonEntry = line
        elif line.startswith("}"):
            ## json entry complete
            jsonEntry = jsonEntry + line
            entry = json.loads(jsonEntry)
            jsonContent[str(entryIndex)] = entry
            entryIndex = entryIndex + 1
            jsonEntry = ""
        elif not ignore(line):
            jsonEntry = jsonEntry + line

    with open(outputFileName, 'w') as outfile:
        json.dump(jsonContent, outfile)
    
if __name__ == "__main__":
    print(sys.argv)
    if (len(sys.argv) == 2):
        print("Processing file: " + sys.argv[1])
        createOneJsonFile(sys.argv[1])
    elif (len(sys.argv) == 3):
        print("Processing file: " + sys.argv[1] + ", outputFile: " + sys.argv[2])
        createOneJsonFile(sys.argv[1], sys.argv[2])
    else:
        print("Usage: ./createJsonFile.py <inputFile.json> <outpuFile.json>")
    
